name: FrontendWorkflow
on:
  push:
    paths:
      - ".github/**"
      - "frontend/**"

jobs:
  deploy-development:
    if: ${{ startsWith(github.ref, 'refs/heads/feature') }}

    timeout-minutes: 30

    environment:
      name: development

    runs-on: ubuntu-latest

    permissions:
      id-token: write

    env:
      BRANCH: ${{ github.ref }}
      OIDC_ROLE_ARN: ${{ secrets.AWS_OIDC_ROLE_ARN }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      BACKEND_STACK_NAME: ${{ secrets.BACKEND_STACK_NAME }}

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.OIDC_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
          mask-aws-account-id: true

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: cache cdk node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: frontend/node_modules
          key: node-${{ runner.os }}-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            node-${{ runner.os }}-

      - name: setup node_modules
        working-directory: frontend
        run: npm ci

      - name: configure env
        run: |
          stacks=$(aws cloudformation describe-stacks \
            --stack-name ${{ env.BACKEND_STACK_NAME }} \
            --query "Stacks[0].Outputs" --output json)
          for i in $(echo $stacks | jq -r 'keys[]'); do
            key=$(echo $stacks | jq -r ".[${i}].OutputKey")
            value=$(echo $stacks | jq -r ".[${i}].OutputValue")
            if [[ $key == "WebSocketApiURL"  ]]; then
              echo "VITE_WEB_SOCKET_API_HOST=$value" >> $GITHUB_ENV
            fi
            if [[ $key == "HTTPApiURL" ]]; then
              echo "VITE_HTTP_API_HOST=$value" >> $GITHUB_ENV
            fi
          done

      - name: build
        working-directory: frontend
        run: |
          echo "VITE_WEB_SOCKET_API_HOST=$VITE_WEB_SOCKET_API_HOST"
          echo "VITE_HTTP_API_HOST=$VITE_HTTP_API_HOST"
          npm run build

      - name: cache cdk node_modules for AWSCDK
        id: cache-node-modules-cdk
        uses: actions/cache@v4
        with:
          path: frontend/cdk/node_modules
          key: node-${{ runner.os }}-${{ hashFiles('frontend/cdk/package-lock.json') }}
          restore-keys: |
            node-${{ runner.os }}-cdk

      - name: setup node_modules for AWSCDK
        working-directory: frontend/cdk
        run: npm ci

      - name: deploy
        working-directory: frontend/cdk
        run: npm run cdk -- deploy -c STAGE=dev --require-approval never
